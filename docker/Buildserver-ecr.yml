AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudShirt - Create ECR repo + Buildserver EC2 (install only, simple version).
  Installs Docker, git and tools and clones the repo. Does NOT build/push images.

Parameters:
  InstanceType:
    Type: String
    Default: t3.medium
    Description: EC2 instance type for buildserver
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: vockey
    Description: Name of an existing EC2 KeyPair for SSH access
  SSHCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR allowed to SSH into the Buildserver
  RepoUrl:
    Type: String
    Default: https://github.com/looking4ward/CloudShirt.git
    Description: Git repository URL for the CloudShirt solution
  RepoBranch:
    Type: String
    Default: main
    Description: Branch to checkout

Resources:
  CloudShirtECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: cloudshirt/web
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: AES256

  BuildserverSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP for buildserver
      VpcId: !ImportValue base-stack:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 2377
          ToPort: 2377
          CidrIp: 0.0.0.0/0

  BuildserverInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0254b2d5c4c472488
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !ImportValue base-stack:CloudShirtFirstSubnet
      SecurityGroupIds:
        - !Ref BuildserverSG
      Tags:
        - Key: Name
          Value: CloudShirt-Buildserver
        - Key: Project
          Value: CloudShirt
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            set -o pipefail

            # Update & install tools
            yum update -y
            yum install -y git docker jq amazon-linux-extras cronie

            # Start docker and allow ec2-user to use it
            systemctl enable --now docker
            usermod -aG docker ec2-user || true

            # Prepare workspace and clone repo as ec2-user
            mkdir -p /home/ec2-user/cloudshirt
            chown ec2-user:ec2-user /home/ec2-user/cloudshirt
            su - ec2-user -c "git clone --branch ${RepoBranch} ${RepoUrl} /home/ec2-user/cloudshirt" || true
            chown -R ec2-user:ec2-user /home/ec2-user/cloudshirt

            # Final note
            echo "Install complete" >> /home/ec2-user/README.txt

Outputs:
  ECRRepositoryUri:
    Description: URI of the created ECR repository (cloudshirt/web)
    Value: !GetAtt CloudShirtECR.RepositoryUri

  BuildserverPublicIP:
    Description: Public IP of the Buildserver EC2
    Value: !GetAtt BuildserverInstance.PublicIp

