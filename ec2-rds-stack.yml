AWSTemplateFormatVersion: 2010-09-09
Description: >
  Deploy Amazon RDS SQL Server instance and two Amazon Linux 2 EC2 instances with .NET 6, 
  nginx reverse proxy, and CloudShirt web app configured to use the RDS database.

Parameters:
  InstanceType:
    Type: String
    Default: t3.small
    Description: EC2 instance type (t3.small aanbevolen voor .NET)
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair for SSH access
  RepoUrl:
    Type: String
    Default: https://github.com/looking4ward/CloudShirt.git
    Description: Git repository URL for the CloudShirt solution
  RepoBranch:
    Type: String
    Default: main
    Description: Branch to checkout
  SSHCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR range allowed to SSH into the instances
  DBUsername:
    Type: String
    Default: csadmin
    NoEcho: true
    Description: Master username for RDS
  DBPassword:
    Type: String
    NoEcho: true
    Description: Master password for RDS
  DBAllocatedStorage:
    Type: Number
    Default: 30
    Description: The size of the database (Gb)

Resources:
  ## =======================
  ## RDS Database Resources
  ## =======================
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SQL Server traffic from VPC
      VpcId: !ImportValue base-stack:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: CloudShirt-RDS-SG
        - Key: Project
          Value: CloudShirt
        - Key: Environment
          Value: dev

  CloudShirtDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: CloudShirt RDS subnet group
      SubnetIds:
        - !ImportValue base-stack:CloudShirtFirstPrivateSubnet
        - !ImportValue base-stack:CloudShirtSecondPrivateSubnet
      Tags:
        - Key: Name
          Value: CloudShirt-DBSubnetGroup

  CloudShirtRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: cloudshirt-db
      Engine: sqlserver-ex
      DBInstanceClass: db.t3.medium
      AllocatedStorage: !Ref DBAllocatedStorage
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      LicenseModel: license-included
      MonitoringInterval: 0
      VPCSecurityGroups:
        - !Ref RdsSecurityGroup
      DBSubnetGroupName: !Ref CloudShirtDBSubnetGroup
      PubliclyAccessible: false
      BackupRetentionPeriod: 1
      MultiAZ: false
      StorageType: gp2
      DeletionProtection: false
    DeletionPolicy: Snapshot

  ## =======================
  ## EC2 Web Tier Resources
  ## =======================
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP and HTTPS traffic
      VpcId: !ImportValue base-stack:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: CloudShirt-EC2-SG
        - Key: Project
          Value: CloudShirt
        - Key: Environment
          Value: dev

  WebInstance1:
    Type: AWS::EC2::Instance
    DependsOn: CloudShirtRDSInstance
    Properties:
      ImageId: ami-0254b2d5c4c472488
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !ImportValue base-stack:CloudShirtFirstSubnet
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: CloudShirt-Web-1
        - Key: Project
          Value: CloudShirt
        - Key: Environment
          Value: dev
      UserData:
        Fn::Base64: !Sub 
          - |
            #!/bin/bash -xe
            yum update -y
            yum install -y gcc git unzip curl amazon-linux-extras

            rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
            yum install -y aspnetcore-runtime-6.0 dotnet-sdk-6.0

            amazon-linux-extras install nginx1 -y
            systemctl enable nginx

            cat >/etc/nginx/conf.d/cloudshirt.conf <<'NGINX'
            server {
                listen 80;
                server_name _;
                location / {
                    proxy_pass http://127.0.0.1:5000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection keep-alive;
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_buffering off;
                }
            }
            NGINX

            APPROOT="/opt/cloudshirt"
            PUBLISH="$APPROOT/publish"
            mkdir -p "$APPROOT"
            chown ec2-user:ec2-user "$APPROOT"

            # Clone and configure database endpoint
            sudo -u ec2-user bash -lc "
              set -e
              git clone --branch ${RepoBranch} ${RepoUrl} $APPROOT/src
              cd $APPROOT/src/src/Web
              sed -i 's/Server.*CatalogDb;/Server=${RDSENDPOINT},1433;User ID=${DBUsername};Password=${DBPassword};Initial Catalog=Microsoft.eShopOnWeb.CatalogDb;/' appsettings.json
              sed -i 's/Server.*Identity;/Server=${RDSENDPOINT},1433;User ID=${DBUsername};Password=${DBPassword};Initial Catalog=Microsoft.eShopOnWeb.Identity;/' appsettings.json
              dotnet restore
              dotnet publish -c Release -o $PUBLISH
            "

            cat >/etc/systemd/system/cloudshirt.service <<'SERVICE'
            [Unit]
            Description=CloudShirt ASP.NET Core Web App
            After=network.target

            [Service]
            WorkingDirectory=/opt/cloudshirt/publish
            ExecStart=/usr/bin/dotnet /opt/cloudshirt/publish/Web.dll
            Restart=always
            RestartSec=5
            KillSignal=SIGINT
            SyslogIdentifier=cloudshirt
            User=ec2-user
            Environment=ASPNETCORE_ENVIRONMENT=Production
            Environment=ASPNETCORE_URLS=http://0.0.0.0:5000

            [Install]
            WantedBy=multi-user.target
            SERVICE

            systemctl daemon-reload
            systemctl enable cloudshirt
            systemctl start cloudshirt
            systemctl restart nginx
          - RDSENDPOINT: !GetAtt CloudShirtRDSInstance.Endpoint.Address
            DBUsername: !Ref DBUsername
            DBPassword: !Ref DBPassword

  WebInstance2:
    Type: AWS::EC2::Instance
    DependsOn: CloudShirtRDSInstance
    Properties:
      ImageId: ami-0254b2d5c4c472488
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !ImportValue base-stack:CloudShirtSecondSubnet
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: CloudShirt-Web-2
        - Key: Project
          Value: CloudShirt
        - Key: Environment
          Value: dev
      UserData:
        Fn::Base64: !Sub 
          - |
            #!/bin/bash -xe
            # identiek aan WebInstance1
            yum update -y
            yum install -y gcc git unzip curl amazon-linux-extras

            rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
            yum install -y aspnetcore-runtime-6.0 dotnet-sdk-6.0

            amazon-linux-extras install nginx1 -y
            systemctl enable nginx

            cat >/etc/nginx/conf.d/cloudshirt.conf <<'NGINX'
            server {
                listen 80;
                server_name _;
                location / {
                    proxy_pass http://127.0.0.1:5000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection keep-alive;
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_buffering off;
                }
            }
            NGINX

            APPROOT="/opt/cloudshirt"
            PUBLISH="$APPROOT/publish"
            mkdir -p "$APPROOT"
            chown ec2-user:ec2-user "$APPROOT"

            sudo -u ec2-user bash -lc "
              set -e
              git clone --branch ${RepoBranch} ${RepoUrl} $APPROOT/src
              cd $APPROOT/src/src/Web
              sed -i 's/Server.*CatalogDb;/Server=${RDSENDPOINT},1433;User ID=${DBUsername};Password=${DBPassword};Initial Catalog=Microsoft.eShopOnWeb.CatalogDb;/' appsettings.json
              sed -i 's/Server.*Identity;/Server=${RDSENDPOINT},1433;User ID=${DBUsername};Password=${DBPassword};Initial Catalog=Microsoft.eShopOnWeb.Identity;/' appsettings.json
              dotnet restore
              dotnet publish -c Release -o $PUBLISH
            "

            cat >/etc/systemd/system/cloudshirt.service <<'SERVICE'
            [Unit]
            Description=CloudShirt ASP.NET Core Web App
            After=network.target

            [Service]
            WorkingDirectory=/opt/cloudshirt/publish
            ExecStart=/usr/bin/dotnet /opt/cloudshirt/publish/Web.dll
            Restart=always
            RestartSec=5
            KillSignal=SIGINT
            SyslogIdentifier=cloudshirt
            User=ec2-user
            Environment=ASPNETCORE_ENVIRONMENT=Production
            Environment=ASPNETCORE_URLS=http://0.0.0.0:5000

            [Install]
            WantedBy=multi-user.target
            SERVICE

            systemctl daemon-reload
            systemctl enable cloudshirt
            systemctl start cloudshirt
            systemctl restart nginx
          - RDSENDPOINT: !GetAtt CloudShirtRDSInstance.Endpoint.Address
            DBUsername: !Ref DBUsername
            DBPassword: !Ref DBPassword

Outputs:
  RDSEndpointAddress:
    Description: The RDS endpoint address
    Value: !GetAtt CloudShirtRDSInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}:RDSEndpointAddress"
  
  Instance1Id:
    Description: EC2 Instance 1 ID
    Value: !Ref WebInstance1
    Export:
      Name: !Sub "${AWS::StackName}:Instance1"
  
  Instance2Id:
    Description: EC2 Instance 2 ID
    Value: !Ref WebInstance2
    Export:
      Name: !Sub "${AWS::StackName}:Instance2"
  
  InstanceSecurityGroupRef:
    Description: EC2 Security Group ID
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}:InstanceSG"
    
